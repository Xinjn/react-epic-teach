{"version":3,"sources":["components/logo.svg","components/Header.js","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js"],"names":["Header","styled","header","Logo","img","StyledLink","NavLink","Login","div","StyledButton","Button","Compenent","observer","history","useHistory","useStores","UserStore","AuthStore","src","LogoUrl","to","activeClassName","exact","currentUser","attributes","username","type","onClick","logout","console","log","push","Footer","footer","Loading","Home","lazy","History","About","Register","App","fallback","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","register","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","error","login","logIn","logOut","getCurrentUser","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","catch","window","makeObservable","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","message","finally","newFilename","newFile","isUpLoading","err","isLogin","values","pullUser","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext"],"mappings":"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","file":"static/js/main.f874a1aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport LogoUrl from './logo.svg'\r\nimport {NavLink,useHistory} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'antd';\r\nimport { useStores } from '../stores';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst Header = styled.header`\r\n    display:flex;\r\n    align-items:center;\r\n    padding:10px 100px;\r\n    background-color:#02101f;\r\n    color:#fff\r\n`\r\nconst Logo = styled.img`\r\n    height:30px\r\n`\r\n\r\nconst StyledLink = styled(NavLink)`\r\n    color:#fff;\r\n    margin-left:30px;\r\n\r\n    &.active {\r\n        border-bottom:1px solid #fff\r\n    }\r\n`\r\nconst Login = styled.div`\r\n    margin-left:auto\r\n`\r\nconst StyledButton = styled(Button)`\r\n    margin-left:10px\r\n`\r\n\r\nconst Compenent = observer(() => {\r\n    const history = useHistory()\r\n    const { UserStore, AuthStore} = useStores()\r\n\r\n    const handleLogout = () => {\r\n        AuthStore.logout()\r\n    }\r\n    const handleLogin = () => {\r\n        console.log('跳转到登录页面');\r\n        history.push('/login')\r\n    }\r\n    const handleRegister = () => {\r\n        console.log('跳转到注册页面');\r\n        history.push('/register')\r\n    }\r\n    return (\r\n        <Header>\r\n            <Logo src={LogoUrl}/>\r\n            <nav>\r\n                <StyledLink to=\"/\" activeClassName=\"active\" exact>首页</StyledLink>\r\n                <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\r\n                <StyledLink to=\"/about\" activeClassName=\"active\">关于我</StyledLink>\r\n            </nav>\r\n            <Login>\r\n                {\r\n                    UserStore.currentUser ? <>\r\n                       { UserStore.currentUser.attributes.username }<StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\r\n                    </> : <>\r\n                        <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\r\n                            <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\r\n                    </>\r\n                }\r\n            </Login>\r\n            \r\n        </Header>\r\n    )\r\n})\r\n\r\nexport default Compenent","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Footer = styled.footer`\r\n  padding:10px 100px;\r\n  text-align:center;\r\n    font-size:12px;\r\n    color:#aaa\r\n`\r\n\r\nfunction Compenent() {\r\n    return (\r\n        <Footer>\r\n            <h1>Footer</h1>\r\n        </Footer>\r\n    )\r\n}\r\n\r\nexport default Compenent","import React from 'react'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div>Loading...</div>\r\n    )\r\n}","import React,{Suspense ,lazy} from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport {Switch,Route} from 'react-router-dom'\nimport Loading from './components/Loading';\n\nconst Home = lazy(() => import('./pages/Home'))\nconst History = lazy(() => import('./pages/History'))\nconst About = lazy(() => import('./pages/About'))\nconst Login = lazy(() => import('./pages/Login'))\nconst Register = lazy(() => import('./pages/Register'))\n\n// import Home from './pages/Home';\n// import History from './pages/History';\n// import About from './pages/About';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/history\" component={History} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} /> \n          </Switch>\n        </Suspense>\n      </main>\n\n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css'\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n\n    <Router>\n      <App />\n    </Router>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","//封装接口\r\nimport AV, { User } from 'leancloud-storage'\r\n\r\nAV.init({\r\n  appId: \"Cb2kHDHQRxl9C9Y4Ofleb1CA-gzGzoHsz\",\r\n  appKey: \"HQ09DSXRA2ltOOCwch8QXiiy\",\r\n  serverURL: \"https://cb2khdhq.lc-cn-n1-shared.com\"\r\n});\r\n\r\nconst Auth = {\r\n\r\n    register(username, password) {\r\n        let user = new User();\r\n        user.setUsername(username);\r\n        user.setPassword(password);\r\n        return new Promise((resolve, reject) => {\r\n            user.signUp().then(loginedUser => resolve(loginedUser),error => reject(error))\r\n        })\r\n    },\r\n    login(username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            AV.User.logIn(username,password).then(loginedUser => resolve(loginedUser),error => reject(error))\r\n        })\r\n    },\r\n    logout() {\r\n        User.logOut();\r\n    },\r\n    getCurrentUser() {\r\n        return User.current()\r\n    }\r\n\r\n}\r\n\r\nconst Uploader = {\r\n    add(file, filename) {\r\n        const item = new AV.Object('Image')\r\n        const avFile = new AV.File(filename, file)\r\n        item.set('filename', filename)\r\n        item.set('owner', AV.User.current())\r\n        item.set('url', avFile)\r\n        return new Promise((resolve, reject) => {\r\n            item.save().then(serverFile => resolve(serverFile),error => reject(error))\r\n        })\r\n    },\r\n\r\n    find({page = 0, limit = 10}) {\r\n        const query = new AV.Query('Image')\r\n        query.include('owner')\r\n        query.limit(limit)\r\n        query.skip(page * limit)\r\n        query.descending('createdAt')\r\n        query.equalTo('owner', AV.User.current())\r\n        return new Promise((resolve, reject) => {\r\n            query.find()\r\n                .then(results => resolve(results))\r\n                .catch(error => reject(error))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nwindow.Auth = Auth\r\nwindow.Uploader = Uploader\r\n\r\nexport {\r\n    Auth,\r\n    Uploader\r\n}","import { observable, action ,makeObservable} from 'mobx'\r\nimport { Auth } from '../models'\r\n\r\n\r\nclass UserStore { \r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n\r\n    @observable currentUser = null\r\n\r\n\r\n    @action pullUser() {\r\n        this.currentUser = Auth.getCurrentUser()\r\n    }\r\n    \r\n    @action resetUser() {\r\n        this.currentUser = null\r\n    }\r\n}\r\n\r\n\r\nexport default new UserStore()","import { observable, action ,makeObservable} from 'mobx'\r\nimport { message } from 'antd';\r\nimport {Uploader} from '../models'\r\n\r\n\r\nclass HistoryStore {\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n\r\n    @observable list = []\r\n    @observable isLoading = false\r\n    @observable hasMore = true\r\n    @observable page = 0\r\n    limit = 10\r\n\r\n    @action append(newList) {\r\n        this.list = this.list.concat(newList)\r\n    }\r\n\r\n    @action find() {\r\n        this.isLoading = true\r\n        Uploader.find({page: this.page, limit: this.limit})\r\n            .then(newList => {\r\n                this.append(newList)\r\n                if (newList.length < this.limit) {\r\n                    this.hasMore = false\r\n                }\r\n            }).catch(error => {\r\n                message.error('加载数据失败')\r\n            }).finally(() => {\r\n                this.isLoading = false\r\n            })\r\n    }\r\n\r\n    @action reset() {\r\n            this.list = []\r\n            this.isLoading = false\r\n            this.hasMore = true\r\n            this.page = 0\r\n\r\n    }\r\n}\r\n\r\nexport default new HistoryStore","import { observable, action ,makeObservable} from 'mobx'\r\nimport { Uploader } from '../models'\r\nimport { message } from 'antd';\r\n\r\n\r\nclass ImageStore {\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n\r\n    @observable filename = \"\"\r\n    @observable file = null\r\n    @observable isUpLoading = false\r\n    @observable serverFile = null\r\n\r\n    @action setFilename(newFilename) {\r\n        this.filename = newFilename\r\n    }\r\n\r\n    @action setFile(newFile) {\r\n        this.file = newFile\r\n    }\r\n\r\n    @action upload() {\r\n        this.isUpLoading = true\r\n        this.serverFile = null\r\n        return new Promise((resolve, reject) => {\r\n            Uploader.add(this.file, this.filename)\r\n                .then(serverFile => {\r\n                    this.serverFile = serverFile\r\n                resolve(serverFile)\r\n                }).catch(err => {\r\n                    message.error('上传失败')\r\n                    reject(err)\r\n                }).finally(() => {\r\n                this.isUpLoading = false\r\n            })\r\n        })\r\n    }\r\n    @action reset() {\r\n        this.isUpLoading = false\r\n        this.serverFile = null\r\n    }\r\n\r\n}\r\n\r\nexport default new ImageStore()","import { observable, action ,makeObservable} from 'mobx'\r\nimport {Auth} from '../models'\r\nimport UserStore from './user'\r\nimport { message } from 'antd';\r\nimport HistoryStore from './history'\r\nimport ImageStore from './image'\r\n\r\n\r\nclass AuthStore {\r\n    constructor() {\r\n        makeObservable(this)\r\n    }\r\n    \r\n    @observable values = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    @action setIsLogin(isLogin) {\r\n        this.isLogin = isLogin\r\n    }\r\n    \r\n    @action setUsername(username) {\r\n        this.values.username = username\r\n    }\r\n\r\n    @action setPassword(password) {\r\n        this.values.password = password\r\n    }\r\n\r\n    @action login() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.login(this.values.username, this.values.password)\r\n                .then(user => {\r\n                    UserStore.pullUser()\r\n                    resolve(user)\r\n                }).catch(err => {\r\n                    UserStore.resetUser()\r\n                    message.error('登录失败')\r\n                    reject(err)\r\n            })\r\n        })\r\n    }\r\n    \r\n    @action register() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.register(this.values.username,this.values.password)\r\n                .then(user => {\r\n                    UserStore.pullUser()\r\n                    resolve(user)\r\n                }).catch(err => {\r\n                    UserStore.resetUser()\r\n                    message.error('注册失败')\r\n                    reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    @action logout() {\r\n        Auth.logout()\r\n        UserStore.resetUser();\r\n        HistoryStore.reset()\r\n        ImageStore.reset()\r\n    }\r\n    \r\n}\r\n\r\nexport default new AuthStore()","//存放不同stores数据\r\nimport { createContext, useContext } from 'react'\r\nimport AuthStore from './auth'\r\nimport UserStore from './user'\r\nimport ImageStore from './image'\r\nimport HistoryStore from  './history'\r\n\r\n\r\nconst context = createContext({\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n})\r\nwindow.stores = {\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n}\r\n\r\nexport const useStores = () => useContext(context)\r\n"],"sourceRoot":""}